{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6cdbb202\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"accordion-item\"\n};\nconst _hoisted_2 = {\n  class: \"toggle-icon\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"accordion-content\"\n};\nimport UploadBox from \"./UploadBox.vue\";\nexport default {\n  __name: 'AccordionItem',\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    content: {\n      type: String,\n      required: true\n    },\n    isOpen: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"toggle\"],\n  setup(__props) {\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n        class: \"accordion-header\",\n        onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('toggle'))\n      }, [_createTextVNode(_toDisplayString(__props.title) + \" \", 1), _createElementVNode(\"span\", _hoisted_2, _toDisplayString(__props.isOpen ? \"▲\" : \"▼\"), 1)]), __props.isOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, _toDisplayString(__props.content), 1), _createVNode(UploadBox, {\n        multiple: false\n      })])) : _createCommentVNode(\"\", true)]);\n    };\n  }\n};","map":{"version":3,"names":["UploadBox"],"sources":["C:/Users/THIAGO/Documents/Estágios/sce-front/src/components/UI/AccordionItem.vue"],"sourcesContent":["<script setup>\r\n\timport { defineProps, defineEmits } from \"vue\";\r\n\timport UploadBox from \"./UploadBox.vue\";\r\n\r\n\tdefineProps({\r\n\t\ttitle: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tcontent: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tisOpen: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false,\r\n\t\t},\r\n\t});\r\n\r\n\tdefineEmits([\"toggle\"]);\r\n</script>\r\n\r\n<template>\r\n\t<div class=\"accordion-item\">\r\n\t\t<div\r\n\t\t\tclass=\"accordion-header\"\r\n\t\t\t@click=\"$emit('toggle')\"\r\n\t\t>\r\n\t\t\t{{ title }}\r\n\t\t\t<span class=\"toggle-icon\">{{ isOpen ? \"▲\" : \"▼\" }}</span>\r\n\t\t</div>\r\n\r\n\t\t<div\r\n\t\t\tv-if=\"isOpen\"\r\n\t\t\tclass=\"accordion-content\"\r\n\t\t>\r\n\t\t\t<p>{{ content }}</p>\r\n\r\n\t\t\t<UploadBox :multiple=\"false\" />\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<style scoped>\r\n\t.accordion-item {\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t}\r\n\r\n\t.accordion-header {\r\n\t\tpadding: 10px;\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: #f7f7f7;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t.accordion-header:hover {\r\n\t\tbackground-color: #eee;\r\n\t}\r\n\r\n\t.toggle-icon {\r\n\t\tmargin-left: 10px;\r\n\t\tfont-size: 0.8em;\r\n\t}\r\n\r\n\t.accordion-content {\r\n\t\tpadding: 15px 10px;\r\n\t\tbackground-color: white;\r\n\t}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;AAEC,OAAOA,SAAS,MAAM,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}