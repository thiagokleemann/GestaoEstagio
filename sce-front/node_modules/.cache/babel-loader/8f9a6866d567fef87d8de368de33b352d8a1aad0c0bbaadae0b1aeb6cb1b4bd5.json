{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CoordenadorEstagioNavigation from '@/components/coordenador/estagio/CoordenadorEstagioNavigation.vue';\nimport RoundedBox from '@/components/base/RoundedBox.vue';\nimport TheAlert from '@/components/base/TheAlert.vue';\nimport axios from \"@/misc/axios.js\";\nexport default {\n  components: {\n    CoordenadorEstagioNavigation,\n    RoundedBox,\n    TheAlert\n  },\n  data() {\n    return {\n      // v-model dos campos do formulário\n      tipo: 0,\n      // Flags de validação\n      validTipo: true,\n      // Flags de campos ativos para setar o z-index\n      activeTipo: false,\n      // Tipos de usuário e Campi do SELECT do formulário\n      tipos: [],\n      // Dados da tabela\n      usuarios: [],\n      // Usados para exibir o spinner\n      isShowing: false,\n      // Arrays de erros\n      errorMessages: []\n    };\n  },\n  methods: {\n    async loadTipos() {\n      try {\n        this.tipos = [];\n        this.errorMessages = [];\n        let response = null;\n        response = await axios.get(\"/tipos/index\");\n        if (response.data) this.tipos = response.data;\n      } catch (error) {\n        this.handleError(error);\n      }\n    },\n    getDescricaoTipoUsuario(id) {\n      let tiposList = this.tipos;\n      let tipo = tiposList.find(t => t.id == id);\n      return tipo ? tipo.descricao : '';\n    },\n    async showUsuarios() {\n      try {\n        this.isShowing = true;\n        this.usuarios = [];\n        this.errorMessages = [];\n        let response = null;\n        const tipo = Number(this.tipo);\n        const campus = Number(this.$store.getters.campus);\n        const payload = {\n          campus,\n          tipo\n        };\n        response = await axios.get(\"/coordenador/estagio/usuarios\", {\n          params: payload\n        });\n        if (response.data) this.usuarios = response.data;\n      } catch (error) {\n        this.handleError(error);\n      } finally {\n        this.isShowing = false;\n      }\n    },\n    handleError(error) {\n      if (error.response && error.response.data && error.response.data.error) this.errorMessages.push(error.response.data.error);else this.errorMessages.push(error.message);\n    }\n  },\n  mounted() {\n    this.loadTipos();\n    this.showUsuarios();\n  }\n};","map":{"version":3,"names":["CoordenadorEstagioNavigation","RoundedBox","TheAlert","axios","components","data","tipo","validTipo","activeTipo","tipos","usuarios","isShowing","errorMessages","methods","loadTipos","response","get","error","handleError","getDescricaoTipoUsuario","id","tiposList","find","t","descricao","showUsuarios","Number","campus","$store","getters","payload","params","push","message","mounted"],"sources":["C:\\Users\\THIAGO\\Documents\\Estágios\\sce-front\\src\\components\\coordenador\\estagio\\CoordenadorEstagioUsuario.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <CoordenadorEstagioNavigation />\r\n\r\n    <div class=\"container\">\r\n\r\n      <RoundedBox>\r\n\r\n        <h3 class=\"text-center\">{{ $t('header.coordenador.estagio.usuario') }}</h3>\r\n\r\n        <div class=\"sce-form\">\r\n          <form @submit.prevent=\"\">\r\n\r\n            <div :class=\"{\r\n          'z-1': !activeTipo && validTipo,\r\n          'z-2': !activeTipo && !validTipo,\r\n          'z-3': activeTipo,\r\n        }\" class=\"form-floating\">\r\n              <select v-model.trim=\"tipo\" class=\"form-select sce-form-single\" @focus=\"activeTipo = true\"\r\n                @blur=\"activeTipo = false\" :class=\"{ 'is-invalid': !validTipo }\" id=\"tipoUsuario\" name=\"tipoUsuario\"\r\n                @change=\"showUsuarios\">\r\n                <option value=\"0\">{{ $t('label.todos') }}</option>\r\n                <option v-for=\"t in tipos\" :key=\"t.id\" :value=\"t.id\">{{ t.descricao }}</option>\r\n              </select>\r\n              <label for=\"tipoUsuario\">{{ $t('label.tipo') }}</label>\r\n            </div>\r\n\r\n            <TheAlert :messages=\"errorMessages\"></TheAlert>\r\n\r\n          </form>\r\n        </div>\r\n\r\n        <div v-if=\"errorMessages.length == 0 && isShowing\" class=\"d-flex justify-content-center mt-5\">\r\n          <div class=\"spinner-border\" role=\"status\">\r\n            <span class=\"sr-only\"></span>\r\n          </div>\r\n        </div>\r\n\r\n        <p v-if=\"errorMessages.length == 0 && !isShowing && usuarios.length == 0\" class=\"text-center mt-5\">\r\n          {{ $t('message.admin.sem-usuarios') }}\r\n        </p>\r\n\r\n        <table class=\"table table-sm table-hover mt-5\"\r\n          v-if=\"errorMessages.length == 0 && !isShowing && usuarios.length > 0\">\r\n\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">{{ $t('label.nome') }}</th>\r\n              <th scope=\"col\">{{ $t('label.email') }}</th>\r\n              <th scope=\"col\">{{ $t('label.tipo') }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"u in usuarios\" :key=\"u.id\">\r\n              <th scope=\"row\">{{ u.id }}</th>\r\n              <td>{{ u.nome }}</td>\r\n              <td>{{ u.email }}</td>\r\n              <td>{{ getDescricaoTipoUsuario(u.tipo) }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </RoundedBox>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport CoordenadorEstagioNavigation from '@/components/coordenador/estagio/CoordenadorEstagioNavigation.vue';\r\nimport RoundedBox from '@/components/base/RoundedBox.vue';\r\nimport TheAlert from '@/components/base/TheAlert.vue';\r\nimport axios from \"@/misc/axios.js\";\r\n\r\nexport default {\r\n  components: {\r\n    CoordenadorEstagioNavigation,\r\n    RoundedBox,\r\n    TheAlert,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      // v-model dos campos do formulário\r\n      tipo: 0,\r\n\r\n      // Flags de validação\r\n      validTipo: true,\r\n\r\n      // Flags de campos ativos para setar o z-index\r\n      activeTipo: false,\r\n\r\n      // Tipos de usuário e Campi do SELECT do formulário\r\n      tipos: [],\r\n\r\n      // Dados da tabela\r\n      usuarios: [],\r\n\r\n      // Usados para exibir o spinner\r\n      isShowing: false,\r\n\r\n      // Arrays de erros\r\n      errorMessages: [],\r\n    }\r\n  },\r\n\r\n  methods: {\r\n\r\n    async loadTipos() {\r\n      try {\r\n        this.tipos = [];\r\n        this.errorMessages = [];\r\n        let response = null;\r\n\r\n        response = await axios.get(\"/tipos/index\");\r\n\r\n        if (response.data)\r\n          this.tipos = response.data;\r\n\r\n      } catch (error) {\r\n        this.handleError(error);\r\n      }\r\n    },\r\n\r\n    getDescricaoTipoUsuario(id) {\r\n      let tiposList = this.tipos;\r\n      let tipo = tiposList.find(t => t.id == id);\r\n      return tipo ? tipo.descricao : '';\r\n    },\r\n\r\n    async showUsuarios() {\r\n      try {\r\n        this.isShowing = true;\r\n        this.usuarios = [];\r\n        this.errorMessages = [];\r\n        let response = null;\r\n\r\n        const tipo = Number(this.tipo);\r\n        const campus = Number(this.$store.getters.campus);\r\n\r\n        const payload = {\r\n          campus,\r\n          tipo,\r\n        };\r\n\r\n        response = await axios.get(\"/coordenador/estagio/usuarios\", {\r\n          params: payload\r\n        });\r\n\r\n        if (response.data)\r\n          this.usuarios = response.data;\r\n\r\n      } catch (error) {\r\n        this.handleError(error);\r\n      } finally {\r\n        this.isShowing = false;\r\n      }\r\n    },\r\n\r\n    handleError(error) {\r\n      if (error.response && error.response.data && error.response.data.error)\r\n        this.errorMessages.push(error.response.data.error);\r\n      else\r\n        this.errorMessages.push(error.message);\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.loadTipos();\r\n    this.showUsuarios();\r\n  },\r\n\r\n}\r\n</script>"],"mappings":";AAqEA,OAAOA,4BAA2B,MAAO,mEAAmE;AAC5G,OAAOC,UAAS,MAAO,kCAAkC;AACzD,OAAOC,QAAO,MAAO,gCAAgC;AACrD,OAAOC,KAAI,MAAO,iBAAiB;AAEnC,eAAe;EACbC,UAAU,EAAE;IACVJ,4BAA4B;IAC5BC,UAAU;IACVC;EACF,CAAC;EAEDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,IAAI,EAAE,CAAC;MAEP;MACAC,SAAS,EAAE,IAAI;MAEf;MACAC,UAAU,EAAE,KAAK;MAEjB;MACAC,KAAK,EAAE,EAAE;MAET;MACAC,QAAQ,EAAE,EAAE;MAEZ;MACAC,SAAS,EAAE,KAAK;MAEhB;MACAC,aAAa,EAAE;IACjB;EACF,CAAC;EAEDC,OAAO,EAAE;IAEP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,IAAI,CAACL,KAAI,GAAI,EAAE;QACf,IAAI,CAACG,aAAY,GAAI,EAAE;QACvB,IAAIG,QAAO,GAAI,IAAI;QAEnBA,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,cAAc,CAAC;QAE1C,IAAID,QAAQ,CAACV,IAAI,EACf,IAAI,CAACI,KAAI,GAAIM,QAAQ,CAACV,IAAI;MAE9B,EAAE,OAAOY,KAAK,EAAE;QACd,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC;MACzB;IACF,CAAC;IAEDE,uBAAuBA,CAACC,EAAE,EAAE;MAC1B,IAAIC,SAAQ,GAAI,IAAI,CAACZ,KAAK;MAC1B,IAAIH,IAAG,GAAIe,SAAS,CAACC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACH,EAAC,IAAKA,EAAE,CAAC;MAC1C,OAAOd,IAAG,GAAIA,IAAI,CAACkB,SAAQ,GAAI,EAAE;IACnC,CAAC;IAED,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,IAAI,CAACd,SAAQ,GAAI,IAAI;QACrB,IAAI,CAACD,QAAO,GAAI,EAAE;QAClB,IAAI,CAACE,aAAY,GAAI,EAAE;QACvB,IAAIG,QAAO,GAAI,IAAI;QAEnB,MAAMT,IAAG,GAAIoB,MAAM,CAAC,IAAI,CAACpB,IAAI,CAAC;QAC9B,MAAMqB,MAAK,GAAID,MAAM,CAAC,IAAI,CAACE,MAAM,CAACC,OAAO,CAACF,MAAM,CAAC;QAEjD,MAAMG,OAAM,GAAI;UACdH,MAAM;UACNrB;QACF,CAAC;QAEDS,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,+BAA+B,EAAE;UAC1De,MAAM,EAAED;QACV,CAAC,CAAC;QAEF,IAAIf,QAAQ,CAACV,IAAI,EACf,IAAI,CAACK,QAAO,GAAIK,QAAQ,CAACV,IAAI;MAEjC,EAAE,OAAOY,KAAK,EAAE;QACd,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC;MACzB,UAAU;QACR,IAAI,CAACN,SAAQ,GAAI,KAAK;MACxB;IACF,CAAC;IAEDO,WAAWA,CAACD,KAAK,EAAE;MACjB,IAAIA,KAAK,CAACF,QAAO,IAAKE,KAAK,CAACF,QAAQ,CAACV,IAAG,IAAKY,KAAK,CAACF,QAAQ,CAACV,IAAI,CAACY,KAAK,EACpE,IAAI,CAACL,aAAa,CAACoB,IAAI,CAACf,KAAK,CAACF,QAAQ,CAACV,IAAI,CAACY,KAAK,CAAC,MAElD,IAAI,CAACL,aAAa,CAACoB,IAAI,CAACf,KAAK,CAACgB,OAAO,CAAC;IAC1C;EACF,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpB,SAAS,CAAC,CAAC;IAChB,IAAI,CAACW,YAAY,CAAC,CAAC;EACrB;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}