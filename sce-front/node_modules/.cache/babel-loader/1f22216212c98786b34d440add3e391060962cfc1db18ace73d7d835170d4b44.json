{"ast":null,"code":"import { createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"text-center\"\n};\nconst _hoisted_3 = {\n  class: \"text-center mt-5\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"text-center\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"spinner-border\",\n  role: \"status\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"visually-hidden\"\n}, \"Carregando status...\")], -1 /* HOISTED */);\nconst _hoisted_7 = [_hoisted_6];\nconst _hoisted_8 = {\n  key: 1,\n  class: \"text-danger\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode($setup[\"AlunoNavigation\"]), _createElementVNode(\"div\", _hoisted_1, [_createVNode($setup[\"RoundedBox\"], null, {\n    default: _withCtx(() => [_createElementVNode(\"h3\", _hoisted_2, _toDisplayString(_ctx.$t(\"header.aluno.documentos\")), 1 /* TEXT */), _createElementVNode(\"h5\", _hoisted_3, [$setup.completePreferences ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, [$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [..._hoisted_7])) : (_openBlock(), _createBlock($setup[\"Accordion\"], {\n      key: 1,\n      items: $setup.documentosAcordeao\n    }, null, 8 /* PROPS */, [\"items\"]))])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \" Por favor, complete suas preferências para enviar documentos. \"))]), _createVNode($setup[\"TheAlert\"], {\n      messages: $setup.errorMessage\n    }, null, 8 /* PROPS */, [\"messages\"])]),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","role","_hoisted_6","_createElementBlock","_createVNode","$setup","_hoisted_1","default","_withCtx","_hoisted_2","_toDisplayString","_ctx","$t","_hoisted_3","completePreferences","_hoisted_4","isLoading","_hoisted_5","_hoisted_7","_createBlock","items","documentosAcordeao","_hoisted_8","messages","errorMessage","_"],"sources":["C:\\Users\\THIAGO\\Documents\\Estágios\\sce-front\\src\\components\\aluno\\AlunoDocumentos.vue"],"sourcesContent":["<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\timport AlunoNavigation from \"@/components/aluno/AlunoNavigation.vue\";\r\n\timport RoundedBox from \"@/components/base/RoundedBox.vue\";\r\n\timport Accordion from \"@/components/UI/AccordionCore.vue\";\r\n\timport TheAlert from \"@/components/base/TheAlert.vue\"; // Adicionei o import do TheAlert\r\n\timport axios from \"@/misc/axios.js\";\r\n\timport constants from \"@/misc/constants.js\";\r\n\r\n\tconst completePreferences = ref(true);\r\n\tconst errorMessage = ref([]);\r\n\tconst isLoading = ref(true); // Flag para o spinner\r\n\r\n\t// 1. Convertido para 'ref' para que possamos atualizar os títulos dinamicamente\r\n\tconst documentosAcordeao = ref([\r\n\t\t{ \r\n\t\t\ttipoId: 1, // ID do tipo no banco\r\n\t\t\tbaseTitle: \"Carta de Apresentação de Estágio\", \r\n\t\t\ttitle: \"Carta de Apresentação de Estágio\", // Este será atualizado\r\n\t\t\tcontent: \"Envie aqui sua carta de apresentação.\",\r\n\t\t\tstatus: \"Carregando...\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ttipoId: 2, // ID do tipo no banco\r\n\t\t\tbaseTitle: \"Confirmação de Orientação de Estágio\",\r\n\t\t\ttitle: \"Confirmação de Orientação de Estágio\",\r\n\t\t\tcontent: \"Envie aqui sua confirmação de orientação.\",\r\n\t\t\tstatus: \"Carregando...\"\r\n\t\t},\r\n\t\t{ \r\n\t\t\ttipoId: 3, // ID do tipo no banco\r\n\t\t\tbaseTitle: \"Ficha de confirmação de estágio\", \r\n\t\t\ttitle: \"Ficha de confirmação de estágio\",\r\n\t\t\tcontent: \"Envie aqui sua ficha de confirmação.\",\r\n\t\t\tstatus: \"Carregando...\"\r\n\t\t},\r\n\t\t{ \r\n\t\t\ttipoId: 4, // ID do tipo no banco\r\n\t\t\tbaseTitle: \"Plano de Atividades\", \r\n\t\t\ttitle: \"Plano de Atividades\",\r\n\t\t\tcontent: \"Envie aqui seu plano de atividades.\",\r\n\t\t\tstatus: \"Carregando...\"\r\n\t\t},\r\n\t\t{ \r\n\t\t\ttipoId: 5, // ID do tipo no banco\r\n\t\t\tbaseTitle: \"Autorização de Uso de Imagens\", \r\n\t\t\ttitle: \"Autorização de Uso de Imagens\",\r\n\t\t\tcontent: \"Envie aqui sua autorização de uso de imagens.\",\r\n\t\t\tstatus: \"Carregando...\"\r\n\t\t},\r\n\t]);\r\n\r\n\tconst handleError = (error) => {\r\n\t\tif (\r\n\t\t\terror.response &&\r\n\t\t\terror.response.data &&\r\n\t\t\terror.response.data.error\r\n\t\t) {\r\n\t\t\terrorMessage.value.push(error.response.data.error);\r\n\t\t} else {\r\n\t\t\terrorMessage.value.push(error.message);\r\n\t\t}\r\n\t};\r\n\r\n\t// 2. Função auxiliar para traduzir o status do banco\r\n\tconst getStatusTexto = (status) => {\r\n\t\tswitch (status) {\r\n\t\t\tcase 1: return \"Aguardando Avaliação\";\r\n\t\t\tcase 2: return \"Aprovado\";\r\n\t\t\tcase 3: return \"Reprovado\";\r\n\t\t\tdefault: return \"Status Desconhecido\";\r\n\t\t}\r\n\t};\r\n\r\n\t// 3. Nova função que busca o status de cada documento no backend\r\n\tconst fetchDocumentosStatus = async () => {\r\n\t\tisLoading.value = true;\r\n\t\t\r\n\t\t// Usamos for...of para poder usar 'await' dentro do loop\r\n\t\tfor (const doc of documentosAcordeao.value) {\r\n\t\t\ttry {\r\n\t\t\t\t// Chama a rota do backend que você já tem: GET /aluno/Documento/:tipo\r\n\t\t\t\tconst response = await axios.get(`/aluno/Documento/${doc.tipoId}`);\r\n\t\t\t\t\r\n\t\t\t\t// Se encontrar, atualiza o status e o título\r\n\t\t\t\tif(response.data && response.data.status) {\r\n\t\t\t\t\tdoc.status = getStatusTexto(response.data.status);\r\n\t\t\t\t\tdoc.title = `${doc.baseTitle} - [${doc.status}]`;\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (error) {\r\n\t\t\t\t// Se der erro 400 (não encontrado), significa que não foi enviado\r\n\t\t\t\tif (error.response && error.response.status === 400) {\r\n\t\t\t\t\tdoc.status = \"Não Enviado\";\r\n\t\t\t\t\tdoc.title = `${doc.baseTitle} - [${doc.status}]`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Outro erro (ex: 503, 401)\r\n\t\t\t\t\tdoc.status = \"Erro ao carregar\";\r\n\t\t\t\t\tdoc.title = `${doc.baseTitle} - [${doc.status}]`;\r\n\t\t\t\t\thandleError(error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tisLoading.value = false;\r\n\t};\r\n\r\n\r\n\tconst checkPreferences = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get(\"/aluno/preferencias\");\r\n\r\n\t\t\tif (response && response.data) {\r\n\t\t\t\tconst { nome, email, campus, curso } = response.data;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tnome &&\r\n\t\t\t\t\tnome.length > constants.MIN_LENGTH_NOME &&\r\n\t\t\t\t\temail &&\r\n\t\t\t\t\tcampus &&\r\n\t\t\t\t\tcurso\r\n\t\t\t\t) {\r\n\t\t\t\t\tcompletePreferences.value = true;\r\n\t\t\t\t\tconsole.log(\"true\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcompletePreferences.value = false;\r\n\t\t\t\t\tconsole.log(\"false\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\thandleError(error);\r\n\t\t}\r\n\t};\r\n\r\n\tonMounted(async () => {\r\n\t\t// 4. Primeiro checa as preferências\r\n\t\tawait checkPreferences();\r\n\t\t\r\n\t\t// 5. Se estiverem OK, busca o status dos documentos\r\n\t\tif(completePreferences.value) {\r\n\t\t\tawait fetchDocumentosStatus();\r\n\t\t} else {\r\n\t\t\tisLoading.value = false;\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<template>\r\n\t<div>\r\n\t\t<AlunoNavigation />\r\n\r\n\t\t<div class=\"container\">\r\n\t\t\t<RoundedBox>\r\n\t\t\t\t<h3 class=\"text-center\">{{ $t(\"header.aluno.documentos\") }}</h3>\r\n\r\n\t\t\t\t<h5 class=\"text-center mt-5\">\r\n\t\t\t\t\t<span v-if=\"completePreferences\">\r\n\t\t\t\t\t\t<div v-if=\"isLoading\" class=\"text-center\">\r\n\t\t\t\t\t\t\t<div class=\"spinner-border\" role=\"status\">\r\n\t\t\t\t\t\t\t\t<span class=\"visually-hidden\">Carregando status...</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Accordion v-else :items=\"documentosAcordeao\" />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span v-else class=\"text-danger\">\r\n\t\t\t\t\t\tPor favor, complete suas preferências para enviar documentos.\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</h5>\r\n\t\t\t\t<TheAlert :messages=\"errorMessage\"></TheAlert>\r\n\t\t\t</RoundedBox>\r\n\t\t</div>\r\n\t</div>\r\n</template>"],"mappings":";;EAsJOA,KAAK,EAAC;AAAW;;EAEhBA,KAAK,EAAC;AAAa;;EAEnBA,KAAK,EAAC;AAAkB;;EA1JhCC,GAAA;AAAA;;EAAAA,GAAA;EA4J4BD,KAAK,EAAC;;gCAC3BE,mBAAA,CAEM;EAFDF,KAAK,EAAC,gBAAgB;EAACG,IAAI,EAAC;iBAChCD,mBAAA,CAAyD;EAAnDF,KAAK,EAAC;AAAiB,GAAC,sBAAoB,E;oBADnDI,UAEM,C;;EA/JbH,GAAA;EAmKkBD,KAAK,EAAC;;;uBAhBvBK,mBAAA,CAuBM,cAtBLC,YAAA,CAAmBC,MAAA,sBAEnBL,mBAAA,CAmBM,OAnBNM,UAmBM,GAlBLF,YAAA,CAiBaC,MAAA;IAxKhBE,OAAA,EAAAC,QAAA,CAwJI,MAAgE,CAAhER,mBAAA,CAAgE,MAAhES,UAAgE,EAAAC,gBAAA,CAArCC,IAAA,CAAAC,EAAE,6CAE7BZ,mBAAA,CAYK,MAZLa,UAYK,GAXQR,MAAA,CAAAS,mBAAmB,I,cAA/BX,mBAAA,CAOO,QAlKZY,UAAA,GA4JiBV,MAAA,CAAAW,SAAS,I,cAApBb,mBAAA,CAIM,OAJNc,UAIM,EAhKZ,IAAAC,UAAA,O,cAiKMC,YAAA,CAAgDd,MAAA;MAjKtDN,GAAA;MAiKyBqB,KAAK,EAAEf,MAAA,CAAAgB;4DAE3BlB,mBAAA,CAEO,QAFPmB,UAEO,EAF0B,iEAEjC,G,GAEDlB,YAAA,CAA8CC,MAAA;MAAnCkB,QAAQ,EAAElB,MAAA,CAAAmB;IAAY,sC;IAvKrCC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}