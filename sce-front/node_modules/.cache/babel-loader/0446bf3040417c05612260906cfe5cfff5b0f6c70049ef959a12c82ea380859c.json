{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from \"vue\";\nimport AlunoNavigation from \"@/components/aluno/AlunoNavigation.vue\";\nimport RoundedBox from \"@/components/base/RoundedBox.vue\";\nimport Accordion from \"@/components/UI/AccordionCore.vue\";\nimport TheAlert from \"@/components/base/TheAlert.vue\"; // Adicionei o import do TheAlert\nimport axios from \"@/misc/axios.js\";\nimport constants from \"@/misc/constants.js\";\nexport default {\n  __name: 'AlunoDocumentos',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const completePreferences = ref(true);\n    const errorMessage = ref([]);\n    const isLoading = ref(true); // Flag para o spinner\n\n    // 1. Convertido para 'ref' para que possamos atualizar os títulos dinamicamente\n    const documentosAcordeao = ref([{\n      tipoId: 1,\n      // ID do tipo no banco\n      baseTitle: \"Carta de Apresentação de Estágio\",\n      title: \"Carta de Apresentação de Estágio\",\n      // Este será atualizado\n      content: \"Envie aqui sua carta de apresentação.\",\n      status: \"Carregando...\"\n    }, {\n      tipoId: 2,\n      // ID do tipo no banco\n      baseTitle: \"Confirmação de Orientação de Estágio\",\n      title: \"Confirmação de Orientação de Estágio\",\n      content: \"Envie aqui sua confirmação de orientação.\",\n      status: \"Carregando...\"\n    }, {\n      tipoId: 3,\n      // ID do tipo no banco\n      baseTitle: \"Ficha de confirmação de estágio\",\n      title: \"Ficha de confirmação de estágio\",\n      content: \"Envie aqui sua ficha de confirmação.\",\n      status: \"Carregando...\"\n    }, {\n      tipoId: 4,\n      // ID do tipo no banco\n      baseTitle: \"Plano de Atividades\",\n      title: \"Plano de Atividades\",\n      content: \"Envie aqui seu plano de atividades.\",\n      status: \"Carregando...\"\n    }, {\n      tipoId: 5,\n      // ID do tipo no banco\n      baseTitle: \"Autorização de Uso de Imagens\",\n      title: \"Autorização de Uso de Imagens\",\n      content: \"Envie aqui sua autorização de uso de imagens.\",\n      status: \"Carregando...\"\n    }]);\n    const handleError = error => {\n      if (error.response && error.response.data && error.response.data.error) {\n        errorMessage.value.push(error.response.data.error);\n      } else {\n        errorMessage.value.push(error.message);\n      }\n    };\n\n    // 2. Função auxiliar para traduzir o status do banco\n    const getStatusTexto = status => {\n      switch (status) {\n        case 1:\n          return \"Aguardando Avaliação\";\n        case 2:\n          return \"Aprovado\";\n        case 3:\n          return \"Reprovado\";\n        default:\n          return \"Status Desconhecido\";\n      }\n    };\n\n    // 3. Nova função que busca o status de cada documento no backend\n    const fetchDocumentosStatus = async () => {\n      isLoading.value = true;\n\n      // Usamos for...of para poder usar 'await' dentro do loop\n      for (const doc of documentosAcordeao.value) {\n        try {\n          // Chama a rota do backend que você já tem: GET /aluno/Documento/:tipo\n          const response = await axios.get(`/aluno/Documento/${doc.tipoId}`);\n\n          // Se encontrar, atualiza o status e o título\n          if (response.data && response.data.status) {\n            doc.status = getStatusTexto(response.data.status);\n            doc.title = `${doc.baseTitle} - [${doc.status}]`;\n          }\n        } catch (error) {\n          // Se der erro 400 (não encontrado), significa que não foi enviado\n          if (error.response && error.response.status === 400) {\n            doc.status = \"Não Enviado\";\n            doc.title = `${doc.baseTitle} - [${doc.status}]`;\n          } else {\n            // Outro erro (ex: 503, 401)\n            doc.status = \"Erro ao carregar\";\n            doc.title = `${doc.baseTitle} - [${doc.status}]`;\n            handleError(error);\n          }\n        }\n      }\n      isLoading.value = false;\n    };\n    const checkPreferences = async () => {\n      try {\n        const response = await axios.get(\"/aluno/preferencias\");\n        if (response && response.data) {\n          const {\n            nome,\n            email,\n            campus,\n            curso\n          } = response.data;\n          if (nome && nome.length > constants.MIN_LENGTH_NOME && email && campus && curso) {\n            completePreferences.value = true;\n            console.log(\"true\");\n          } else {\n            completePreferences.value = false;\n            console.log(\"false\");\n          }\n        }\n      } catch (error) {\n        handleError(error);\n      }\n    };\n    onMounted(async () => {\n      // 4. Primeiro checa as preferências\n      await checkPreferences();\n\n      // 5. Se estiverem OK, busca o status dos documentos\n      if (completePreferences.value) {\n        await fetchDocumentosStatus();\n      } else {\n        isLoading.value = false;\n      }\n    });\n    const __returned__ = {\n      completePreferences,\n      errorMessage,\n      isLoading,\n      documentosAcordeao,\n      handleError,\n      getStatusTexto,\n      fetchDocumentosStatus,\n      checkPreferences,\n      ref,\n      onMounted,\n      AlunoNavigation,\n      RoundedBox,\n      Accordion,\n      TheAlert,\n      get axios() {\n        return axios;\n      },\n      get constants() {\n        return constants;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","AlunoNavigation","RoundedBox","Accordion","TheAlert","axios","constants","completePreferences","errorMessage","isLoading","documentosAcordeao","tipoId","baseTitle","title","content","status","handleError","error","response","data","value","push","message","getStatusTexto","fetchDocumentosStatus","doc","get","checkPreferences","nome","email","campus","curso","length","MIN_LENGTH_NOME","console","log"],"sources":["C:/Users/THIAGO/Documents/Estágios/sce-front/src/components/aluno/AlunoDocumentos.vue"],"sourcesContent":["<script setup>\r\n\timport { ref, onMounted } from \"vue\";\r\n\timport AlunoNavigation from \"@/components/aluno/AlunoNavigation.vue\";\r\n\timport RoundedBox from \"@/components/base/RoundedBox.vue\";\r\n\timport Accordion from \"@/components/UI/AccordionCore.vue\";\r\n\timport TheAlert from \"@/components/base/TheAlert.vue\"; // Adicionei o import do TheAlert\r\n\timport axios from \"@/misc/axios.js\";\r\n\timport constants from \"@/misc/constants.js\";\r\n\r\n\tconst completePreferences = ref(true);\r\n\tconst errorMessage = ref([]);\r\n\tconst isLoading = ref(true); // Flag para o spinner\r\n\r\n\t// 1. Convertido para 'ref' para que possamos atualizar os títulos dinamicamente\r\n\tconst documentosAcordeao = ref([\r\n\t\t{ \r\n\t\t\ttipoId: 1, // ID do tipo no banco\r\n\t\t\tbaseTitle: \"Carta de Apresentação de Estágio\", \r\n\t\t\ttitle: \"Carta de Apresentação de Estágio\", // Este será atualizado\r\n\t\t\tcontent: \"Envie aqui sua carta de apresentação.\",\r\n\t\t\tstatus: \"Carregando...\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ttipoId: 2, // ID do tipo no banco\r\n\t\t\tbaseTitle: \"Confirmação de Orientação de Estágio\",\r\n\t\t\ttitle: \"Confirmação de Orientação de Estágio\",\r\n\t\t\tcontent: \"Envie aqui sua confirmação de orientação.\",\r\n\t\t\tstatus: \"Carregando...\"\r\n\t\t},\r\n\t\t{ \r\n\t\t\ttipoId: 3, // ID do tipo no banco\r\n\t\t\tbaseTitle: \"Ficha de confirmação de estágio\", \r\n\t\t\ttitle: \"Ficha de confirmação de estágio\",\r\n\t\t\tcontent: \"Envie aqui sua ficha de confirmação.\",\r\n\t\t\tstatus: \"Carregando...\"\r\n\t\t},\r\n\t\t{ \r\n\t\t\ttipoId: 4, // ID do tipo no banco\r\n\t\t\tbaseTitle: \"Plano de Atividades\", \r\n\t\t\ttitle: \"Plano de Atividades\",\r\n\t\t\tcontent: \"Envie aqui seu plano de atividades.\",\r\n\t\t\tstatus: \"Carregando...\"\r\n\t\t},\r\n\t\t{ \r\n\t\t\ttipoId: 5, // ID do tipo no banco\r\n\t\t\tbaseTitle: \"Autorização de Uso de Imagens\", \r\n\t\t\ttitle: \"Autorização de Uso de Imagens\",\r\n\t\t\tcontent: \"Envie aqui sua autorização de uso de imagens.\",\r\n\t\t\tstatus: \"Carregando...\"\r\n\t\t},\r\n\t]);\r\n\r\n\tconst handleError = (error) => {\r\n\t\tif (\r\n\t\t\terror.response &&\r\n\t\t\terror.response.data &&\r\n\t\t\terror.response.data.error\r\n\t\t) {\r\n\t\t\terrorMessage.value.push(error.response.data.error);\r\n\t\t} else {\r\n\t\t\terrorMessage.value.push(error.message);\r\n\t\t}\r\n\t};\r\n\r\n\t// 2. Função auxiliar para traduzir o status do banco\r\n\tconst getStatusTexto = (status) => {\r\n\t\tswitch (status) {\r\n\t\t\tcase 1: return \"Aguardando Avaliação\";\r\n\t\t\tcase 2: return \"Aprovado\";\r\n\t\t\tcase 3: return \"Reprovado\";\r\n\t\t\tdefault: return \"Status Desconhecido\";\r\n\t\t}\r\n\t};\r\n\r\n\t// 3. Nova função que busca o status de cada documento no backend\r\n\tconst fetchDocumentosStatus = async () => {\r\n\t\tisLoading.value = true;\r\n\t\t\r\n\t\t// Usamos for...of para poder usar 'await' dentro do loop\r\n\t\tfor (const doc of documentosAcordeao.value) {\r\n\t\t\ttry {\r\n\t\t\t\t// Chama a rota do backend que você já tem: GET /aluno/Documento/:tipo\r\n\t\t\t\tconst response = await axios.get(`/aluno/Documento/${doc.tipoId}`);\r\n\t\t\t\t\r\n\t\t\t\t// Se encontrar, atualiza o status e o título\r\n\t\t\t\tif(response.data && response.data.status) {\r\n\t\t\t\t\tdoc.status = getStatusTexto(response.data.status);\r\n\t\t\t\t\tdoc.title = `${doc.baseTitle} - [${doc.status}]`;\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (error) {\r\n\t\t\t\t// Se der erro 400 (não encontrado), significa que não foi enviado\r\n\t\t\t\tif (error.response && error.response.status === 400) {\r\n\t\t\t\t\tdoc.status = \"Não Enviado\";\r\n\t\t\t\t\tdoc.title = `${doc.baseTitle} - [${doc.status}]`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Outro erro (ex: 503, 401)\r\n\t\t\t\t\tdoc.status = \"Erro ao carregar\";\r\n\t\t\t\t\tdoc.title = `${doc.baseTitle} - [${doc.status}]`;\r\n\t\t\t\t\thandleError(error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tisLoading.value = false;\r\n\t};\r\n\r\n\r\n\tconst checkPreferences = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get(\"/aluno/preferencias\");\r\n\r\n\t\t\tif (response && response.data) {\r\n\t\t\t\tconst { nome, email, campus, curso } = response.data;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tnome &&\r\n\t\t\t\t\tnome.length > constants.MIN_LENGTH_NOME &&\r\n\t\t\t\t\temail &&\r\n\t\t\t\t\tcampus &&\r\n\t\t\t\t\tcurso\r\n\t\t\t\t) {\r\n\t\t\t\t\tcompletePreferences.value = true;\r\n\t\t\t\t\tconsole.log(\"true\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcompletePreferences.value = false;\r\n\t\t\t\t\tconsole.log(\"false\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\thandleError(error);\r\n\t\t}\r\n\t};\r\n\r\n\tonMounted(async () => {\r\n\t\t// 4. Primeiro checa as preferências\r\n\t\tawait checkPreferences();\r\n\t\t\r\n\t\t// 5. Se estiverem OK, busca o status dos documentos\r\n\t\tif(completePreferences.value) {\r\n\t\t\tawait fetchDocumentosStatus();\r\n\t\t} else {\r\n\t\t\tisLoading.value = false;\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<template>\r\n\t<div>\r\n\t\t<AlunoNavigation />\r\n\r\n\t\t<div class=\"container\">\r\n\t\t\t<RoundedBox>\r\n\t\t\t\t<h3 class=\"text-center\">{{ $t(\"header.aluno.documentos\") }}</h3>\r\n\r\n\t\t\t\t<h5 class=\"text-center mt-5\">\r\n\t\t\t\t\t<span v-if=\"completePreferences\">\r\n\t\t\t\t\t\t<div v-if=\"isLoading\" class=\"text-center\">\r\n\t\t\t\t\t\t\t<div class=\"spinner-border\" role=\"status\">\r\n\t\t\t\t\t\t\t\t<span class=\"visually-hidden\">Carregando status...</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Accordion v-else :items=\"documentosAcordeao\" />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span v-else class=\"text-danger\">\r\n\t\t\t\t\t\tPor favor, complete suas preferências para enviar documentos.\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</h5>\r\n\t\t\t\t<TheAlert :messages=\"errorMessage\"></TheAlert>\r\n\t\t\t</RoundedBox>\r\n\t\t</div>\r\n\t</div>\r\n</template>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}